*** Settings ***
Library           ../lib/Selenium2Improved.py
Resource          ../common_resource.txt

*** Keywords ***
Task Checked Out With Arguments
    [Arguments]    ${_StoryID}    ${_TaskID}
    Wait Until Page Contains Element    xpath=//div[@id="${_StoryID}_new"]//table[@class="TaskCard_Header"]//td[2]/h2[text()="[Task]\ \ #${_TaskID}"]/../../../../../../../..
    Wait Until Page Contains Element    xpath=//div[@id="${_StoryID}_assigned"]/div
    Assign Id To Element    xpath=//div[@id="${_StoryID}_assigned"]/div    checkedOutStageID
    Click Element    checkedOutStageID
    Drag And Drop    xpath=//div[@id="${_StoryID}_new"]//table[@class="TaskCard_Header"]//td[2]/h2[text()="[Task]\ \ #${_TaskID}"]/../../../../../../../..    target=checkedOutStageID
    Comment    Wait Until Page Contains    Check Out Task
    Comment    ${_XpathCheckOutTask}=    Find Current Window Element    Check Out Task    Check Out
    Comment    Element Enable And Submit    ${_XpathCheckOutTask}
    Click Element    xpath=//button[text()="Check Out"]
    Wait Until Page Contains    Success.

Task Done With Arguments
    [Arguments]    ${_StoryID}    ${_TaskID}
    Click Element    xpath=//div[@id="${_StoryID}_closed"]
    Drag And Drop    xpath=//div[@id="${_StoryID}_assigned"]//table[@class="TaskCard_Header"]//td[2]/h2[text()="[Task]\ \ #${_TaskID}"]    target=${_StoryID}_closed
    Click Element    xpath=//button[text()="Done"]
    Wait Until Page Contains    Success.

Task ReOpen With Arguments
    [Arguments]    ${_StoryID}    ${_TaskID}
    Drag And Drop    xpath=//div[@id="${_StoryID}_closed"]//table[@class="TaskCard_Header"]//td[2]/h2[text()="[Task]\ \ #${_TaskID}"]/../../../../../../../..    target=${_StoryID}_assigned
    Comment    Wait Until Page Contains    Re Opened Issue
    Comment    ${_XpathReOpenTask}=    Find Current Window Element    Re Opened Issue    Re Open
    Comment    Element Enable And Submit    ${_XpathReOpenTask}
    Wait Until Element Is Visible    xpath=//button[text()="Re Open"]    1 min
    Click Element    xpath=//button[text()="Re Open"]
    Wait Until Page Contains    Success.

Task ReChecked Out With Arguments
    [Arguments]    ${_StoryID}    ${_TaskID}
    Drag And Drop    xpath=//div[@id="${_StoryID}_assigned"]//table[@class="TaskCard_Header"]//td[2]/h2[text()="[Task]\ \ #${_TaskID}"]/../../../../../../../..    target=${_StoryID}_new
    Comment    Wait Until Page Contains    Reset Checked Out Task
    Comment    ${_XpathResetCheckOutTask}=    Find Current Window Element    Reset Checked Out Task    Reset Check Out
    Comment    Element Enable And Submit    ${_XpathResetCheckOutTask}
    Click Element    xpath=//button[text()="Reset Check Out"]
    Wait Until Page Contains    Success.

Story Done With Arguments
    [Arguments]    ${_StoryID}
    Drag And Drop    xpath=//*[@id="Story:${_StoryID}"]    target=${_StoryID}_closed
    Comment    Wait Until Page Contains    Done Story
    Comment    ${_XpathDoneStory}=    Find Current Window Element    Done Story #${_StoryID}    Done
    Comment    Element Enable And Submit    ${_XpathDoneStory}
    Click Element    xpath=//button[text()="Done"]
    Wait Until Page Contains    Success.

Story ReOpen With Arguments
    [Arguments]    ${_StoryID}
    Drag And Drop    xpath=//div[@id="${_StoryID}_closed"]//table[@class="StoryCard_Header"]//td[1]/h2[text()="[Story]\ \ #${_StoryID}"]/../../../../../../../..    target=${_StoryID}_new
    Comment    Wait Until Page Contains    Re Opened Issue
    Comment    ${_XpathReOpenStory}=    Find Current Window Element    Re Opened Issue    Re Open
    Comment    Element Enable And Submit    ${_XpathReOpenStory}
    Click Element    xpath=//button[text()="Re Open"]
    Wait Until Page Contains    Success.

Verify Story Information With Arguments In TaskBoard
    [Arguments]    ${_StoryID}    ${_StoryName}    ${_StoryValue}    ${_StoryEstimate}    ${_StoryImportance}    ${tagName}
    ...    ${_StoryNotes}    ${_StoryHowToDemo}
    Click Element    xpath=//div[@id="TaskBoard_Page"]//div[@id="${_StoryID}_new"]//a[@title="Edit the Story"]
    Compare Field Content    //textarea[@name="Name"]    ${_StoryName}
    Compare Field Content    //input[@name="Value"]    ${_StoryValue}
    Compare Field Content    //input[@name="Estimate"]    ${_StoryEstimate}
    Compare Field Content    //input[@name="Importance"]    ${_StoryImportance}
    Compare Field Content    //textarea[@name="Notes"]    ${_StoryNotes}
    Compare Field Content    //input[@name="Tags"]    ${tagName}
    Compare Field Content    //textarea[@name="HowToDemo"]    ${_StoryHowToDemo}
    ${_XpathEditStoryCancel}=    Find Current Window Element    Edit Story #${_StoryID}    Cancel
    Element Enable And Submit    ${_XpathEditStoryCancel}

Verify Task Information With Arguments In TaskBoard
    [Arguments]    ${_TaskID}    ${_TaskName}    ${_TaskHandler}    ${_TaskPartners}    ${_TaskEstimate}    ${_TaskRemains}
    ...    ${_TaskNotes}    # We remove ${_TaskActual} between ${_TaskRemains} and \ ${_TaskNotes}. Original Arugments are ${_TaskID} | ${_TaskName} | ${_TaskHandler} | ${_TaskPartners} | ${_TaskEstimate} | ${_TaskRemains} | ${_TaskActual} | ${_TaskNotes}
    Click Element    xpath=//div[@id="TaskBoard_Page"]//div[@id="${tcStoryID}_new"]//table[@class="TaskCard_Header"]//td[2]/h2[text()="[Task]\ \ #${_TaskID}"]/../..//a[@title="Edit the Task"]
    Compare Field Content    //span[text()="Edit Task #${_TaskID}"]/../../../../../div[@class="x-window-bwrap"]//input[@name="Name"]    ${_TaskName}
    Compare Field Content    //span[text()="Edit Task #${_TaskID}"]/../../../../../div[@class="x-window-bwrap"]//input[@name="HandlerComboBox_ForEditTask"]    ${_TaskHandler}
    Compare Field Content    //span[text()="Edit Task #${_TaskID}"]/../../../../../div[@class="x-window-bwrap"]//input[@name="Partners"]    ${_TaskPartners}
    Compare Field Content    //span[text()="Edit Task #${_TaskID}"]/../../../../../div[@class="x-window-bwrap"]//input[@name="Estimate"]    ${_TaskEstimate}
    Compare Field Content    //span[text()="Edit Task #${_TaskID}"]/../../../../../div[@class="x-window-bwrap"]//input[@name="Remains"]    ${_TaskRemains}
    #We remove actual hours of task, because it is not useful.
    Comment    Compare Field Content    //span[text()="Edit Task #${_TaskID}"]/../../../../../div[@class="x-window-bwrap"]//input[@name="Actual"]    ${_TaskActual}
    Compare Field Content    //span[text()="Edit Task #${_TaskID}"]/../../../../../div[@class="x-window-bwrap"]//textarea[@name="Notes"]    ${_TaskNotes}
    ${_XpathEditStoryCancel}=    Find Current Window Element    Edit Task #${_TaskID}    Cancel
    Element Enable And Submit    ${_XpathEditStoryCancel}

Move Task From Check Out To Done
    [Arguments]    ${Story_ID}    ${Task_number}
    Click Element    xpath=//div[@id="${Story_ID}_closed"]
    Drag and Drop    xpath=//div[@id="${Story_ID}_assigned"]//table[@class="TaskCard_Header"]//td[2]/h2[text()="[Task]\ \ #${Task_number}"]    target=${Story_ID}_closed
    Wait Until Page Contains Element    xpath=//tr//button[text()="Done"]
    Click Element    xpath=//tr//button[text()="Done"]

Check if Done column has TaskCard
    [Arguments]    ${Story_ID}    ${TaskNumber}
    Wait until Page Contains Element    xpath=//table[@class="TaskCard_Table"]
    Page Should Contain Element    xpath=//div[@id="${Story_ID}_closed"]//h2[text()="[Task] \ #${Task_number}"]    message=#${TaskNumber} taskcard doesn't in the done column

Move Task From Check Out To Done Check ID Before Click Done
    [Arguments]    ${Story_ID}    ${Task_ID}    ${initialTaskName}
    Click Element    //table[@class="x-table-layout"]//div[@id="${Story_ID}_closed"]
    Drag and Drop    xpath=//div[@id="${Story_ID}_assigned"]//table[@class="TaskCard_Header"]//td[2]/h2[text()="[Task]\ \ #${Task_ID}"]    target=${Story_ID}_closed
    ${windowTaskName}=    Get Value    //input[@name="Id"]/../div[1]/div/input
    Should Be Equal    ${windowTaskName}    ${initialTaskName}
    ${windowTital}=    Set Variable    //div[@class="x-window-tl"]//span[text()="Done Task #${Task_ID}"]
    Compare Text In Specific Xpath    ${windowTital}    Done Task #${Task_ID}
    Click Element    xpath=//button[text()="Done"]

Check TaskCard Contents
    [Arguments]    ${TaskCardID}    ${TaskCardContent}    ${TaskCardHandler}    ${TaskCardHours}
    ${FetchTaskCardID}=    Get Text    //div[@id="Task:${TaskCardID}"]//table[@class="TaskCard_Header"]
    ${FetchTaskCardID}=    Fetch From Right    ${FetchTaskCardID}    \#
    Should Be Equal    ${FetchTaskCardID}    ${TaskCardID}
    ${FetchTaskCardContent}=    Get Text    //div[@id="Task:${TaskCardID}"]//td[@class="TaskCard_Description"]
    Should Be Equal    ${FetchTaskCardContent}    ${TaskCardContent}
    ${FetchTaskCardHandler}=    Get Text    //div[@id="Task:${TaskCardID}"]//span[@class="TaskCard_Handler"]
    Should Be Equal    ${FetchTaskCardHandler}    ${TaskCardHandler}
    ${FetchTaskCardHours}=    Get Text    //div[@id="Task:${TaskCardID}"]//td[@class="TaskCard_Value"]
    Should Be Equal    ${FetchTaskCardHours}    ${TaskCardHours}

Move Task From Not Check Out To Check Out Check ID Before Click Done
    [Arguments]    ${Story_ID}    ${Task_ID}    ${initialTaskName}
    Click Element    //table[@class="x-table-layout"]//div[@id="${Story_ID}_closed"]
    Drag and Drop    xpath=//div[@id="${Story_ID}_new"]//table[@class="TaskCard_Header"]//td[2]/h2[text()="[Task]\ \ #${Task_ID}"]    target=${Story_ID}_assigned
    ${windowTaskName}=    Get Value    //input[@name="Id"]/../div[1]/div/input
    Should Be Equal    ${windowTaskName}    ${initialTaskName}
    ${windowTital}=    Set Variable    //div[@class="x-window-tl"]//span[text()="Check Out Task #${Task_ID}"]
    Compare Text In Specific Xpath    ${windowTital}    Check Out Task #${Task_ID}
    Click Element    xpath=//button[text()="Check Out"]

Move Task From Done To Check Out Check ID Before Click Done
    [Arguments]    ${Story_ID}    ${Task_ID}    ${initialTaskName}
    Click Element    //table[@class="x-table-layout"]//div[@id="${Story_ID}_closed"]
    Drag and Drop    xpath=//div[@id="${Story_ID}_closed"]//table[@class="TaskCard_Header"]//td[2]/h2[text()="[Task]\ \ #${Task_ID}"]    target=${Story_ID}_assigned
    ${windowTaskName}=    Get Value    //input[@name="Id"]/../div[1]/div/input
    Should Be Equal    ${windowTaskName}    ${initialTaskName}
    ${windowTital}=    Set Variable    //div[@class="x-window-tl"]//span[text()="Re Opened Task #${Task_ID}"]
    Compare Text In Specific Xpath    ${windowTital}    Re Opened Task #${Task_ID}
    Click Element    xpath=//button[text()="Re Open"]

Move Task From Check Out To Not Check Out Check ID Before Click Done
    [Arguments]    ${Story_ID}    ${Task_ID}    ${initialTaskName}
    Click Element    //table[@class="x-table-layout"]//div[@id="${Story_ID}_closed"]
    Drag and Drop    xpath=//div[@id="${Story_ID}_assigned"]//table[@class="TaskCard_Header"]//td[2]/h2[text()="[Task]\ \ #${Task_ID}"]    target=${Story_ID}_new
    ${windowTaskName}=    Get Value    //input[@name="Id"]/../div[1]/div/input
    Should Be Equal    ${windowTaskName}    ${initialTaskName}
    ${windowTital}=    Set Variable    //div[@class="x-window-tl"]//span[text()="Reset Checked Out Task #${Task_ID}"]
    Compare Text In Specific Xpath    ${windowTital}    Reset Checked Out Task #${Task_ID}
    Click Element    xpath=//button[text()="Reset Check Out"]

Check TaskCard Remain Hours Can Not Be Edited
    [Documentation]    Check the input of remains is readonly in *Not Checked Out State* or *Done State*.
    ${remains}=    Set Variable    //input[@name="Remains"]
    Wait Until Element Is Visible    ${remains}    15
    ${remainsClass}=    Get Element Attribute    ${remains} @readonly
    Should Be Equal    ${remainsClass}    true
    ${editTaskCancel}=    Find Current Window Element    Edit Task #${tcTaskID}    Cancel
    Click Element    ${editTaskCancel}

TaskCard Remain Hours Should Not Be Zero In Checked Out State
    [Documentation]    Check the input of remains can't input zero in *Checked Out State*.
    ${remains}=    Set Variable    //input[@name="Remains"]
    Double Click Element    ${remains}
    ${remainsClass}=    Get Element Attribute    ${remains} @readonly
    Should Be Equal As Strings    ${remainsClass}    None
    Edit Task    Remains    0
    Wait Until Keyword Succeeds    15    1    Alert Should Be Present    The value of remains can not be zero.
    Compare Field Content    ${remains}    3
    ${editTaskSubmit}=    Find Current Window Element    Edit Task #${tcTaskID}    Submit
    ${isSubmitVisible}=    Run Keyword And Return Status    Element Should Be Visible    ${editTaskSubmit}
    Run Keyword If    ${isSubmitVisible}    Click Element    ${editTaskSubmit}

Move Task
    [Arguments]    ${_ThisState}    ${_TargetState}    ${_StoryID}    ${_TaskID}
    ${thisStateID}=    Set Variable If    '${_ThisState}' == 'Not Checked Out'    new    '${_ThisState}' == 'Checked Out'    assigned    '${_ThisState}' == 'Done'
    ...    closed
    ${targetStateID}=    Set Variable If    '${_TargetState}' == 'Not Checked Out'    new    '${_TargetState}' == 'Checked Out'    assigned    '${_TargetState}' == 'Done'
    ...    closed
    Wait Until Keyword Succeeds    15    1    Drag And Drop    xpath=//div[@id="${_StoryID}_${thisStateID}"]//table[@class="TaskCard_Header"]//td[2]/h2[text()="[Task]\ \ #${_TaskID}"]    target=${_StoryID}_${targetStateID}
    ${ButtonText}=    Set Variable If    '${_ThisState}' == 'Not Checked Out' and '${_TargetState}' == 'Checked Out'    'Check Out'    '${_ThisState}' == 'Checked Out' and '${_TargetState}' == 'Done'    'Done'    '${_ThisState}' == 'Done' and '${_TargetState}' == 'Checked Out'
    ...    'Re Open'    '${_ThisState}' == 'Checked Out' and '${_TargetState}' == 'Not Checked Out'    'Reset Check Out'
    Wait Until Keyword Succeeds    15    1    Click Button    //button[text()=${ButtonText}]
    Wait Until Page Contains    Success.

Task Remain Hours Should Be Reverted To Last Remain Hours Value When Move From Done To Checked Out
    [Arguments]    ${_LastRemains}
    ${remains}=    Set Variable    //input[@name="Remains"]
    Compare Field Content    ${remains}    ${_LastRemains}
    ${editTaskCancel}=    Find Current Window Element    Edit Task #${tcTaskID}    Cancel
    Click Element    ${editTaskCancel}
    ${taskCardValue}=    Set Variable    //td[@class="TaskCard_Value"]
    Compare Text In Specific Xpath    ${taskCardValue}    ${_LastRemains} hr

Check If Remains Changed Then TaskCard Can Not Move From Checked Out To Not Checked Out
    [Arguments]    ${_StoryID}    ${_TaskID}
    Wait Until Keyword Succeeds    15    1    Drag And Drop    xpath=//div[@id="${_StoryID}_assigned"]//table[@class="TaskCard_Header"]//td[2]/h2[text()="[Task]\ \ #${_TaskID}"]    target=${_StoryID}_new
    Element Should Not Be Visible    xpath=//button[text()="Reset Check Out"]

Edit Task
    [Arguments]    ${Column}    ${Value}
    Input Text    //input[@name="${Column}"]    ${Value}
    ${editTaskSubmit}=    Find Current Window Element    Edit Task #${tcTaskID}    Submit
    Click Element    ${editTaskSubmit}

Click TaskCard Edit Button
    [Arguments]    ${tcTaskID}
    ${taskEditImg}=    Set Variable    //h2[text()="[Task] \ #${tcTaskID}"]/../..//img[@src="images/edit.png"]
    Wait Until Keyword Succeeds    15    1    Click Element    ${taskEditImg}

Check Task Actual Hours Has Been Removed When Move From Checked Out To Done
    [Arguments]    ${Story_ID}    ${Task_ID}
    Drag and Drop    xpath=//div[@id="${Story_ID}_assigned"]//table[@class="TaskCard_Header"]//td[2]/h2[text()="[Task]\ \ #${Task_ID}"]    target=${Story_ID}_closed
    ${actual hours}=    Set Variable    //input[@name="Actual"]
    Page Should Not Contain Element    ${actual hours}
    ${done}=    Find Current Window Element    Done Task #${Task_ID}    Done
    Wait Until Keyword Succeeds    15    1    Click Element    ${done}

Check Task Actual Hours Has Been Removed When Edit Task
    Click TaskCard Edit Button    ${tcTaskID}
    ${actual hours}=    Set Variable    //input[@name="Actual"]
    Page Should Not Contain Element    ${actual hours}
    ${editTaskSubmit}=    Find Current Window Element    Edit Task #${tcTaskID}    Submit
    Click Element    ${editTaskSubmit}
